version: '3.8'

services:
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "5001:5000"
    environment:
      - MISTRAL_API_KEY=${MISTRAL_API_KEY}
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - FLASK_ENV=development
      - FLASK_APP=app.py
      - PYTHONUNBUFFERED=1
    volumes:
      - ./backend:/app
    depends_on:
      elasticsearch:
        condition: service_healthy
    container_name: fitgpt-backend

  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    container_name: fitgpt-frontend

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.9
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
      - http.cors.enabled=true
      - http.cors.allow-origin=*
      - http.cors.allow-headers=X-Requested-With,X-Auth-Token,Content-Type,Content-Length,Authorization
      - http.cors.allow-credentials=true
    ports:
      - "9200:9200"
    volumes:
      - esdata:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200"]
      interval: 10s
      timeout: 5s
      retries: 5
    container_name: fitgpt-elasticsearch

volumes:
  esdata: